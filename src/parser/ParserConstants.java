/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CELLULAR = 5;
  /** RegularExpression Id. */
  int AUTOMAT = 6;
  /** RegularExpression Id. */
  int INHABITANT = 7;
  /** RegularExpression Id. */
  int TEMPLATE = 8;
  /** RegularExpression Id. */
  int HABITAT = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int THEN = 11;
  /** RegularExpression Id. */
  int WIDTH = 12;
  /** RegularExpression Id. */
  int HEIGHT = 13;
  /** RegularExpression Id. */
  int ENVIRONMENT = 14;
  /** RegularExpression Id. */
  int POPULATE = 15;
  /** RegularExpression Id. */
  int MOORE = 16;
  /** RegularExpression Id. */
  int NEUMANN = 17;
  /** RegularExpression Id. */
  int IS = 18;
  /** RegularExpression Id. */
  int NOT = 19;
  /** RegularExpression Id. */
  int AND = 20;
  /** RegularExpression Id. */
  int OR = 21;
  /** RegularExpression Id. */
  int XOR = 22;
  /** RegularExpression Id. */
  int BLACK = 23;
  /** RegularExpression Id. */
  int BLUE = 24;
  /** RegularExpression Id. */
  int RED = 25;
  /** RegularExpression Id. */
  int OP_EQUAL = 26;
  /** RegularExpression Id. */
  int OP_LESS_OR_EQUAL = 27;
  /** RegularExpression Id. */
  int OP_MORE_OR_EQUAL = 28;
  /** RegularExpression Id. */
  int OP_LESS = 29;
  /** RegularExpression Id. */
  int OP_MORE = 30;
  /** RegularExpression Id. */
  int S_END = 31;
  /** RegularExpression Id. */
  int S_OB = 32;
  /** RegularExpression Id. */
  int S_CB = 33;
  /** RegularExpression Id. */
  int FCT_COUNT = 34;
  /** RegularExpression Id. */
  int FCT_GETVALUE = 35;
  /** RegularExpression Id. */
  int FCT_CHECK = 36;
  /** RegularExpression Id. */
  int ACT_KILL = 37;
  /** RegularExpression Id. */
  int ACT_CREATE = 38;
  /** RegularExpression Id. */
  int ACT_ADD = 39;
  /** RegularExpression Id. */
  int ACT_DEPLOY = 40;
  /** RegularExpression Id. */
  int NUMBER = 41;
  /** RegularExpression Id. */
  int TRUE = 42;
  /** RegularExpression Id. */
  int FALSE = 43;
  /** RegularExpression Id. */
  int DIGIT = 44;
  /** RegularExpression Id. */
  int IDENTIFIER = 45;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"cellular\"",
    "\"automat\"",
    "\"inhabitant\"",
    "\"template\"",
    "\"habitat\"",
    "\"if\"",
    "\"then\"",
    "\"width\"",
    "\"height\"",
    "\"environment\"",
    "\"populate\"",
    "\"moore\"",
    "\"neumann\"",
    "\"is\"",
    "\"not\"",
    "\"and\"",
    "\"or\"",
    "\"xor\"",
    "\"black\"",
    "\"blue\"",
    "\"red\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"<\"",
    "\">\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"count\"",
    "\"getvalue\"",
    "\"check\"",
    "\"kill\"",
    "\"create\"",
    "\"add\"",
    "\"deploy\"",
    "<NUMBER>",
    "\"true\"",
    "\"false\"",
    "<DIGIT>",
    "<IDENTIFIER>",
    "\"=\"",
    "\",\"",
    "\"%\"",
  };

}
